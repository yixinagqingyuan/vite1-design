{"version":3,"sources":["../src/client/client.ts"],"sourcesContent":["/** @format */\n\nconsole.log('[vite] connecting...')\n// ws 接收消息\nconst socket = new WebSocket(`ws://localhost:__HMR_PORT__`, 'vite-hmr')\nsocket.addEventListener('message', async ({ data }) => {\n  handleMessage(JSON.parse(data)).catch(console.error)\n})\n\ninterface Update {\n  type: 'js-update' | 'css-update'\n  path: string\n  acceptedPath: string\n  timestamp: number\n}\n\nasync function handleMessage(payload: any) {\n  // 判断类型， 表示链接成功\n  switch (payload.type) {\n    case 'connected':\n      console.log(`[vite] connected.`)\n      setInterval(() => socket.send('ping'), 1000)\n      break\n    // 主要热跟新逻辑\n    case 'update':\n      payload.updates.forEach((update: Update) => {\n        if (update.type === 'js-update') {\n          fetchUpdate(update)\n        }\n      })\n      break\n  }\n}\n\ninterface HotModule {\n  id: string\n  callbacks: HotCallback[]\n}\n\ninterface HotCallback {\n  deps: string[]\n  fn: (modules: object[]) => void\n}\n\nconst hotModulesMap = new Map<string, HotModule>()\nconst pruneMap = new Map<string, (data: any) => void | Promise<void>>()\n\nexport const createHotContext = (ownerPath: string) => {\n  const mod = hotModulesMap.get(ownerPath)\n  if (mod) {\n    mod.callbacks = []\n  }\n\n  function acceptDeps(deps: string[], callback: any) {\n    const mod: HotModule = hotModulesMap.get(ownerPath) || {\n      id: ownerPath,\n      callbacks: [],\n    }\n    mod.callbacks.push({\n      deps,\n      fn: callback,\n    })\n    hotModulesMap.set(ownerPath, mod)\n  }\n\n  return {\n    //import.meta.hot.accept 会找到这个方法\n    accept(deps: any) {\n      if (typeof deps === 'function' || !deps) {\n        acceptDeps([ownerPath], ([mod]) => deps && deps(mod))\n      }\n    },\n    prune(cb: (data: any) => void) {\n      pruneMap.set(ownerPath, cb)\n    },\n  }\n}\n// 热更新逻辑\nasync function fetchUpdate({ path, timestamp }: Update) {\n  const mod = hotModulesMap.get(path)\n  if (!mod) return\n\n  const moduleMap = new Map()\n  const modulesToUpdate = new Set<string>()\n\n  modulesToUpdate.add(path)\n\n  await Promise.all(\n    Array.from(modulesToUpdate).map(async (dep) => {\n      const [path, query] = dep.split(`?`)\n      try {\n        // 这里会去请求新的文件,导入之后直接执行\n        const newMod = await import(\n          path + `?t=${timestamp}${query ? `&${query}` : ''}`\n        )\n        moduleMap.set(dep, newMod)\n      } catch (e) {}\n    }),\n  )\n\n  return () => {\n    for (const { deps, fn } of mod.callbacks) {\n      fn(deps.map((dep: any) => moduleMap.get(dep)))\n    }\n    console.log(`[vite] hot updated: ${path}`)\n  }\n}\n\nconst sheetsMap = new Map()\n\nexport function updateStyle(id: string, content: string) {\n  let style = sheetsMap.get(id)\n  if (!style) {\n    style = document.createElement('style')\n    style.setAttribute('type', 'text/css')\n    style.innerHTML = content\n    document.head.appendChild(style)\n  } else {\n    style.innerHTML = content\n  }\n  sheetsMap.set(id, style)\n}\n\nexport function removeStyle(id: string): void {\n  const style = sheetsMap.get(id)\n  if (style) {\n    document.head.removeChild(style)\n  }\n  sheetsMap.delete(id)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,QAAQ,IAAI,sBAAsB;AAElC,IAAM,SAAS,IAAI,UAAU,+BAA+B,UAAU;AACtE,OAAO,iBAAiB,WAAW,OAAO,EAAE,WAAW;AACrD,gBAAc,KAAK,MAAM,IAAI,CAAC,EAAE,MAAM,QAAQ,KAAK;AACrD,CAAC;AASD,6BAA6B,SAAc;AAEzC,UAAQ,QAAQ;AAAA,SACT;AACH,cAAQ,IAAI,mBAAmB;AAC/B,kBAAY,MAAM,OAAO,KAAK,MAAM,GAAG,GAAI;AAC3C;AAAA,SAEG;AACH,cAAQ,QAAQ,QAAQ,CAAC,WAAmB;AAC1C,YAAI,OAAO,SAAS,aAAa;AAC/B,sBAAY,MAAM;AAAA,QACpB;AAAA,MACF,CAAC;AACD;AAAA;AAEN;AAYA,IAAM,gBAAgB,oBAAI,IAAuB;AACjD,IAAM,WAAW,oBAAI,IAAiD;AAE/D,IAAM,mBAAmB,CAAC,cAAsB;AACrD,QAAM,MAAM,cAAc,IAAI,SAAS;AACvC,MAAI,KAAK;AACP,QAAI,YAAY,CAAC;AAAA,EACnB;AAEA,sBAAoB,MAAgB,UAAe;AACjD,UAAM,OAAiB,cAAc,IAAI,SAAS,KAAK;AAAA,MACrD,IAAI;AAAA,MACJ,WAAW,CAAC;AAAA,IACd;AACA,SAAI,UAAU,KAAK;AAAA,MACjB;AAAA,MACA,IAAI;AAAA,IACN,CAAC;AACD,kBAAc,IAAI,WAAW,IAAG;AAAA,EAClC;AAEA,SAAO;AAAA,IAEL,OAAO,MAAW;AAChB,UAAI,OAAO,SAAS,cAAc,CAAC,MAAM;AACvC,mBAAW,CAAC,SAAS,GAAG,CAAC,CAAC,UAAS,QAAQ,KAAK,IAAG,CAAC;AAAA,MACtD;AAAA,IACF;AAAA,IACA,MAAM,IAAyB;AAC7B,eAAS,IAAI,WAAW,EAAE;AAAA,IAC5B;AAAA,EACF;AACF;AAEA,2BAA2B,EAAE,MAAM,aAAqB;AACtD,QAAM,MAAM,cAAc,IAAI,IAAI;AAClC,MAAI,CAAC;AAAK;AAEV,QAAM,YAAY,oBAAI,IAAI;AAC1B,QAAM,kBAAkB,oBAAI,IAAY;AAExC,kBAAgB,IAAI,IAAI;AAExB,QAAM,QAAQ,IACZ,MAAM,KAAK,eAAe,EAAE,IAAI,OAAO,QAAQ;AAC7C,UAAM,CAAC,OAAM,SAAS,IAAI,MAAM,GAAG;AACnC,QAAI;AAEF,YAAM,SAAS,MAAM,OACnB,QAAO,MAAM,YAAY,QAAQ,IAAI,UAAU;AAEjD,gBAAU,IAAI,KAAK,MAAM;AAAA,IAC3B,SAAS,GAAP;AAAA,IAAW;AAAA,EACf,CAAC,CACH;AAEA,SAAO,MAAM;AACX,eAAW,EAAE,MAAM,QAAQ,IAAI,WAAW;AACxC,SAAG,KAAK,IAAI,CAAC,QAAa,UAAU,IAAI,GAAG,CAAC,CAAC;AAAA,IAC/C;AACA,YAAQ,IAAI,uBAAuB,MAAM;AAAA,EAC3C;AACF;AAEA,IAAM,YAAY,oBAAI,IAAI;AAEnB,qBAAqB,IAAY,SAAiB;AACvD,MAAI,QAAQ,UAAU,IAAI,EAAE;AAC5B,MAAI,CAAC,OAAO;AACV,YAAQ,SAAS,cAAc,OAAO;AACtC,UAAM,aAAa,QAAQ,UAAU;AACrC,UAAM,YAAY;AAClB,aAAS,KAAK,YAAY,KAAK;AAAA,EACjC,OAAO;AACL,UAAM,YAAY;AAAA,EACpB;AACA,YAAU,IAAI,IAAI,KAAK;AACzB;AAEO,qBAAqB,IAAkB;AAC5C,QAAM,QAAQ,UAAU,IAAI,EAAE;AAC9B,MAAI,OAAO;AACT,aAAS,KAAK,YAAY,KAAK;AAAA,EACjC;AACA,YAAU,OAAO,EAAE;AACrB;","names":[]}