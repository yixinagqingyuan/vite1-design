{"version":3,"sources":["../node_modules/.pnpm/tsup@5.12.6_typescript@4.6.4/node_modules/tsup/assets/esm_shims.js","../src/node/cli.ts","../src/node/server/index.ts","../src/node/optimizer/index.ts","../src/node/constants.ts","../src/node/optimizer/scanPlugin.ts","../src/node/optimizer/preBundlePlugin.ts","../src/node/utils.ts","../src/node/server/middlewares/transform.ts","../src/node/ModuleGraph.ts","../src/node/pluginContainer.ts","../src/node/plugins/esbuild.ts","../src/node/plugins/resolve.ts","../src/node/plugins/importAnalysis.ts","../src/node/plugins/css.ts","../src/node/plugins/assets.ts","../src/node/plugins/clientInject.ts","../src/node/plugins/react-hmr.ts","../src/node/plugins/vue-hmr.ts","../src/node/plugins/index.ts","../src/node/server/middlewares/indexHtml.ts","../src/node/server/middlewares/static.ts","../src/node/ws.ts","../src/node/hmr.ts"],"sourcesContent":["// Shim globals in esm bundle\nimport { fileURLToPath } from 'url'\nimport path from 'path'\n\nconst getFilename = () => fileURLToPath(import.meta.url)\nconst getDirname = () => path.dirname(getFilename())\n\nexport const __dirname = /* @__PURE__ */ getDirname()\nexport const __filename = /* @__PURE__ */ getFilename()\n","/** @format */\n\nimport cac from 'cac'\nimport { startDevServer } from './server'\n\nconst cli = cac()\n//ÂëΩ‰ª§Ë°åÂ∑•ÂÖ∑ Ë∑ücommanderÁ±ª‰ººÔºå   ÊØîÂ¶ÇËæìÂÖ• vite serve  vite dev ÊâßË°åÂØπÂ∫îÁöÑÊñπÊ≥ï\ncli\n  .command('[root]', 'Run the development server')\n  .alias('serve')\n  .alias('dev')\n  .action(async (option) => {\n    // Ê†∏ÂøÉ server ÂêØÂä®ÊñπÊ≥ï\n    await startDevServer(option)\n  })\n// build ‰ΩøÁî® rollup ÊâìÂåÖÔºåÊöÇ‰∏çÂ§ÑÁêÜ\ncli.command('build', 'Build the app for production').action(() => {})\n\ncli.help()\n\ncli.parse()\n","/** @format */\n\nimport connect from 'connect'\nimport { optimize } from '../optimizer/index'\nimport { blue, green } from 'picocolors'\nimport { transformMiddleware } from './middlewares/transform'\nimport { ModuleGraph } from '../ModuleGraph'\nimport { createPluginContainer, PluginContainer } from '../pluginContainer'\nimport { resolvePlugins } from '../plugins'\nimport { indexHtmlMiddware } from './middlewares/indexHtml'\nimport { staticMiddleware } from './middlewares/static'\nimport { createWebSocketServer } from '../ws'\n//ÊûÅÁÆÄÈ´òÊïàÁöÑË∑®Âπ≥Âè∞Êñá‰ª∂ÁõëËßÜÂ∫ì Áõ∏ÂΩì‰∫é Nodefs Ê®°Âùó\nimport chokidar, { FSWatcher } from 'chokidar'\nimport { bindingHMREvents } from '../hmr'\nimport { Plugin } from '../plugin'\nimport { normalizePath } from '../utils'\n\nexport interface ServerContext {\n  root: string\n  pluginContainer: PluginContainer\n  app: connect.Server\n  plugins: Plugin[]\n  moduleGraph: ModuleGraph\n  ws: { send: (data: any) => void; close: () => void }\n  watcher: FSWatcher\n  type: string\n}\n\nexport async function startDevServer(type) {\n  // ConnectÊòØ‰∏Ä‰∏™ÂèØÊâ©Â±ïÁöÑHTTPÊúçÂä°Âô®Ê°ÜÊû∂,Á±ª‰ºº‰∫é koa\n  const app = connect()\n  //process.cwd() ÊòØ‰∏Ä‰∏™ÊñπÊ≥ïÔºåÁî®‰∫éËé∑Âèñ Node.js ËøõÁ®ãÁöÑÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩï\n  const root = process.cwd()\n  //  Êó∂Èó¥Êà≥\n  const startTime = Date.now()\n  // ÂæóÂà∞Êèí‰ª∂Êï∞ÁªÑ\n  const plugins = resolvePlugins()\n  // ÂàùÂßãÂåñÊèí‰ª∂\n  const pluginContainer = createPluginContainer(plugins)\n  // ÂàùÂßãÂåñÊ®°ÂùóÊò†Â∞ÑÂÆû‰æãÔºå‰∏ªË¶ÅÂêéÊúüÁî®Êù•Âø´ÈÄüÂ≠òÂèñÁî®ÁöÑ\n  const moduleGraph = new ModuleGraph((url) => pluginContainer.resolveId(url))\n  // ÁõëÂê¨Êñá‰ª∂ÂèòÂä®ÔºåÂêéÊúüÁî®Êù•ÂÅöÁÉ≠Ë∑üÊñ∞\n  const watcher = chokidar.watch(root, {\n    ignored: ['**/node_modules/**', '**/.git/**'],\n    ignoreInitial: true,\n  })\n  // WebSocket ÂØπË±° ÂêéÊúüÁÉ≠Êõ¥Êñ∞Â∞±Èù†ÂÆÉ\n  const ws = createWebSocketServer(app)\n  // ÂºÄÂèëÊúçÂä°Âô®‰∏ä‰∏ãÊñá\n  const serverContext: ServerContext = {\n    root: normalizePath(process.cwd()),\n    app,\n    pluginContainer,\n    plugins,\n    moduleGraph,\n    ws,\n    type: type == 'react' ? 'react' : 'vue',\n    watcher,\n  }\n  // ÁªëÂÆöÁÉ≠Êõ¥Êñ∞\n  bindingHMREvents(serverContext)\n  for (const plugin of plugins) {\n    // Ë∞ÉÁî®Êèí‰ª∂ÁöÑÈÖçÁΩÆÊñπÊ≥ïÔºå‰∏ªË¶ÅÂ∞±ÊòØÂú®Êèí‰ª∂‰∏≠‰øùÂ≠òÂΩìÂâç‰∏ä‰∏ãÊñáÂÆû‰æã\n    // ÂêéÁª≠Êèí‰ª∂‰∏≠ÂèØËÉΩÁî®ÁöÑÂà∞\n    if (plugin.configureServer) {\n      await plugin.configureServer(serverContext)\n    }\n  }\n  // Ê∑ªÂä†Ê¥ãËë±Âúà‰∏≠Èó¥‰ª∂ÔºåÊØèÊ¨°ËØ∑Ê±ÇÈÉΩ‰ºöËøá‰∏ÄÈÅç‰∏≠Èó¥‰ª∂\n  // Ê†πÊçÆ‰∏çÂêåÁ±ªÂûãÔºåËøîÂõû‰∏çÂêåÁöÑËµÑÊ∫ê\n  // Ê†∏ÂøÉÁºñËØëÈÄªËæë\n  app.use(transformMiddleware(serverContext))\n\n  // ÂÖ•Âè£ HTML ËµÑÊ∫ê\n  app.use(indexHtmlMiddware(serverContext))\n\n  // ÈùôÊÄÅËµÑÊ∫ê\n  app.use(staticMiddleware(serverContext.root))\n  // ÂêØÂä®ÊúçÂä°Âô®\n  app.listen(3000, async () => {\n    await optimize(root, type == 'react' ? 'src/main.tsx' : 'src/main.ts')\n    console.log(\n      green('üöÄ No-Bundle ÊúçÂä°Â∑≤ÁªèÊàêÂäüÂêØÂä®!'),\n      `ËÄóÊó∂: ${Date.now() - startTime}ms`,\n    )\n    console.log(`> Êú¨Âú∞ËÆøÈóÆË∑ØÂæÑ: ${blue('http://localhost:3000')}`)\n  })\n}\n","/** @format */\n\nimport { build } from 'esbuild'\nimport { green } from 'picocolors'\nimport path from 'path'\nimport { scanPlugin } from './scanPlugin'\nimport { preBundlePlugin } from './preBundlePlugin'\nimport { PRE_BUNDLE_DIR } from '../constants'\n\nexport async function optimize(root: string, file: string) {\n  // 1. Á°ÆÂÆöÂÖ•Âè£\n  const entry = path.resolve(root, file)\n\n  // 2. ‰ªéÂÖ•Âè£Â§ÑÊâ´Êèè‰æùËµñ\n  const deps = new Set<string>()\n  await build({\n    entryPoints: [entry],\n    bundle: true,\n    write: false,\n    plugins: [scanPlugin(deps)],\n  })\n  console.log(\n    `${green('ÈúÄË¶ÅÈ¢ÑÊûÑÂª∫ÁöÑ‰æùËµñ')}:\\n${[...deps]\n      .map(green)\n      .map((item) => `  ${item}`)\n      .join('\\n')}\\n`,\n  )\n\n  // 3. È¢ÑÊûÑÂª∫‰æùËµñ\n  await build({\n    entryPoints: [...deps],\n    write: true,\n    bundle: true,\n    format: 'esm',\n    splitting: true,\n    outdir: path.resolve(root, PRE_BUNDLE_DIR),\n    plugins: [preBundlePlugin(deps)],\n  })\n}\n","import path from \"path\";\n\nexport const EXTERNAL_TYPES = [\n  \"css\",\n  \"less\",\n  \"sass\",\n  \"scss\",\n  \"styl\",\n  \"stylus\",\n  \"pcss\",\n  \"postcss\",\n  \"vue\",\n  \"svelte\",\n  \"marko\",\n  \"astro\",\n  \"png\",\n  \"jpe?g\",\n  \"gif\",\n  \"svg\",\n  \"ico\",\n  \"webp\",\n  \"avif\",\n];\n\nexport const JS_TYPES_RE = /\\.(?:j|t)sx?$|\\.mjs$/;\nexport const BARE_IMPORT_RE = /^[\\w@][^:]/;\nexport const QEURY_RE = /\\?.*$/s;\nexport const HASH_RE = /#.*$/s;\nexport const PRE_BUNDLE_DIR = path.join(\"node_modules\", \".m-vite\");\nexport const DEFAULT_EXTERSIONS = [\".tsx\", \".ts\", \".jsx\", \"js\"];\nexport const HMR_HEADER = \"vite-hmr\";\nexport const CLIENT_PUBLIC_PATH = \"/@vite/client\";\nexport const HMR_PORT = 24678;\n","import { Plugin } from \"esbuild\";\nimport { BARE_IMPORT_RE, EXTERNAL_TYPES } from \"../constants\";\n\nexport function scanPlugin(deps: Set<string>): Plugin {\n  return {\n    name: \"esbuild:scan-deps\",\n    setup(build) {\n      // ÂøΩÁï•ÁöÑÊñá‰ª∂Á±ªÂûã\n      build.onResolve(\n        { filter: new RegExp(`\\\\.(${EXTERNAL_TYPES.join(\"|\")})$`) },\n        (resolveInfo) => {\n          return {\n            path: resolveInfo.path,\n            external: true,\n          };\n        }\n      );\n      // ËÆ∞ÂΩï‰æùËµñ\n      build.onResolve(\n        {\n          filter: BARE_IMPORT_RE,\n        },\n        (resolveInfo) => {\n          const { path: id } = resolveInfo;\n          deps.add(id);\n          return {\n            path: id,\n            external: true,\n          };\n        }\n      );\n    },\n  };\n}\n","import { Loader, Plugin } from \"esbuild\";\nimport { BARE_IMPORT_RE } from \"../constants\";\nimport { init, parse } from \"es-module-lexer\";\nimport path from \"path\";\nimport resolve from \"resolve\";\nimport fs from \"fs-extra\";\nimport createDebug from \"debug\";\nimport { normalizePath } from \"../utils\";\n\nconst debug = createDebug(\"dev\");\n\nexport function preBundlePlugin(deps: Set<string>): Plugin {\n  return {\n    name: \"esbuild:pre-bundle\",\n    setup(build) {\n      build.onResolve(\n        {\n          filter: BARE_IMPORT_RE,\n        },\n        (resolveInfo) => {\n          const { path: id, importer } = resolveInfo;\n          const isEntry = !importer;\n          // ÂëΩ‰∏≠ÈúÄË¶ÅÈ¢ÑÁºñËØëÁöÑ‰æùËµñ\n          if (deps.has(id)) {\n            // Ëã•‰∏∫ÂÖ•Âè£ÔºåÂàôÊ†áËÆ∞ dep ÁöÑ namespace\n            return isEntry\n              ? {\n                  path: id,\n                  namespace: \"dep\",\n                }\n              : {\n                  // Âõ†‰∏∫Ëµ∞Âà∞ onResolve ‰∫ÜÔºåÊâÄ‰ª•ËøôÈáåÁöÑ path Â∞±ÊòØÁªùÂØπË∑ØÂæÑ‰∫Ü\n                  path: resolve.sync(id, { basedir: process.cwd() }),\n                };\n          }\n        }\n      );\n\n      // ÊãøÂà∞Ê†áËÆ∞ÂêéÁöÑ‰æùËµñÔºåÊûÑÈÄ†‰ª£ÁêÜÊ®°ÂùóÔºå‰∫§Áªô esbuild ÊâìÂåÖ\n      build.onLoad(\n        {\n          filter: /.*/,\n          namespace: \"dep\",\n        },\n        async (loadInfo) => {\n          await init;\n          const id = loadInfo.path;\n          const root = process.cwd();\n          const entryPath = normalizePath(resolve.sync(id, { basedir: root }));\n          const code = await fs.readFile(entryPath, \"utf-8\");\n          const [imports, exports] = await parse(code);\n          let proxyModule = [];\n          // cjs\n          if (!imports.length && !exports.length) {\n            const res = require(entryPath);\n            const specifiers = Object.keys(res);\n            proxyModule.push(\n              `export { ${specifiers.join(\",\")} } from \"${entryPath}\"`,\n              `export default require(\"${entryPath}\")`\n            );\n          } else {\n            if (exports.includes(\"default\")) {\n              proxyModule.push(`import d from \"${entryPath}\";export default d`);\n            }\n            proxyModule.push(`export * from \"${entryPath}\"`);\n          }\n          debug(\"‰ª£ÁêÜÊ®°ÂùóÂÜÖÂÆπ: %o\", proxyModule.join(\"\\n\"));\n          const loader = path.extname(entryPath).slice(1);\n          return {\n            loader: loader as Loader,\n            contents: proxyModule.join(\"\\n\"),\n            resolveDir: root,\n          };\n        }\n      );\n    },\n  };\n}\n","/** @format */\n\nimport { CLIENT_PUBLIC_PATH, HASH_RE, JS_TYPES_RE, QEURY_RE } from './constants'\nimport path from 'path'\nimport os from 'os'\nimport { createHash } from 'node:crypto'\nconst INTERNAL_LIST = [CLIENT_PUBLIC_PATH, '/@react-refresh']\n// ÂéªÈô§ url ‰∏≠ÁöÑÁÉÇ‰∏ÉÂÖ´ÁöÑÂèÇÊï∞Ôºü# Á≠âÂèÇÊï∞\nexport const cleanUrl = (url: string): string =>\n  url.replace(HASH_RE, '').replace(QEURY_RE, '')\n\nexport const isCSSRequest = (id: string): boolean =>\n  cleanUrl(id).endsWith('.css')\n\nexport const isJSRequest = (id: string): boolean => {\n  id = cleanUrl(id)\n  if (JS_TYPES_RE.test(id)) {\n    return true\n  }\n  if (!path.extname(id) && !id.endsWith('/')) {\n    return true\n  }\n  return false\n}\nexport const isVue = (id: string) => {\n  return id.endsWith('.vue')\n}\n\nexport function isImportRequest(url: string): boolean {\n  return url.endsWith('?import')\n}\n\nexport function isInternalRequest(url: string): boolean {\n  return INTERNAL_LIST.includes(url)\n}\n\nexport function removeImportQuery(url: string): string {\n  return url.replace(/\\?import$/, '')\n}\n\nexport function isPlainObject(obj: any): boolean {\n  return Object.prototype.toString.call(obj) === '[object Object]'\n}\n\nexport function getShortName(file: string, root: string) {\n  return file.startsWith(root + '/') ? path.posix.relative(root, file) : file\n}\n\nexport function slash(p: string): string {\n  return p.replace(/\\\\/g, '/')\n}\n\nexport function normalizePath(id: string): string {\n  return path.posix.normalize(isWindows ? slash(id) : id)\n}\nexport const isWindows = os.platform() === 'win32'\n\nexport function getHash(text: string): string {\n  return createHash('sha256').update(text).digest('hex').substring(0, 8)\n}\n\nexport function parseVueRequest(id: string): {\n  filename: string\n  query: any\n} {\n  const [filename, rawQuery] = id.split(`?`, 2)\n  const query = Object.fromEntries(new URLSearchParams(rawQuery)) as any\n  if (query.vue != null) {\n    query.vue = true\n  }\n  if (query.index != null) {\n    query.index = Number(query.index)\n  }\n  if (query.raw != null) {\n    query.raw = true\n  }\n  if (query.url != null) {\n    query.url = true\n  }\n  if (query.scoped != null) {\n    query.scoped = true\n  }\n  return {\n    filename,\n    query,\n  }\n}\n","/** @format */\n\nimport { NextHandleFunction } from 'connect'\nimport { CLIENT_PUBLIC_PATH } from '../../constants'\nimport {\n  isJSRequest,\n  isCSSRequest,\n  isImportRequest,\n  isVue,\n  isInternalRequest,\n  cleanUrl,\n} from '../../utils'\nimport { ServerContext } from '../index'\nimport createDebug from 'debug'\n\nconst debug = createDebug('dev')\n\nexport async function transformRequest(\n  url: string,\n  serverContext: ServerContext,\n) {\n  const { moduleGraph, pluginContainer } = serverContext\n  // ÂØπ url ËøõË°åÊ∏ÖÊ¥ó\n  url = cleanUrl(url)\n  // ÈÄöËøáurl Êò†Â∞ÑÊãøÂà∞ÁºñËØëÂêéÁöÑÂÆû‰æã\n  let mod = await moduleGraph.getModuleByUrl(url)\n  // Â¶ÇÊûúÂ∑≤ÁªèÁºñËØëËøá‰∫ÜÔºåÂ∞±ËøîÂõûÁªìÊûú\n  if (mod && mod.transformResult) {\n    return mod.transformResult\n  }\n  // ‰∏çÁÑ∂Â∞±Ë¶ÅÈáçÊñ∞ÁºñËØë\n  // ÂàÜÂà´‰ªéÊèí‰ª∂‰∏≠ÊãøÂà∞ÂØπÂ∫îÁöÑ id ÁÉ≠Êõ¥Êñ∞ÁöÑÊó∂ÂÄôÁºìÂ≠òÁöÑÊó∂ÂÄôÂ∫îËØ•‰πüÈúÄË¶ÅËøô‰∏™ id\n  const resolvedResult = await pluginContainer.resolveId(url)\n  let transformResult\n  // ÂêØÂä®ÁºñËØëÔºåÊãøÂà∞‰ª£Á†Å\n  if (resolvedResult?.id) {\n    // ‰ªéÊñá‰ª∂‰∏≠ÊãøÂà∞Ê∫êÁ†Å\n    let code = await pluginContainer.load(resolvedResult.id)\n    // ÊúâÂèØËÉΩ‰∏ÄÊ¨°Â§ÑÁêÜÂ•Ω‰∫ÜÔºå Â∞±‰∏çÁî®ÂÜçÁºñËØë‰∫ÜÁõ¥Êé•ËøîÂõûÂ•ΩÂ∞±Ë°åÔºåÊØîÂ¶ÇÈùôÊÄÅËµÑÊ∫ê\n    if (typeof code === 'object' && code !== null) {\n      code = code.code\n    }\n    // Ëøô‰∏™ÊòØÊúâÂèØËÉΩÊúâ mod ÂÆû‰æã‰∫ÜÔºå‰ΩÜÊòØËøòÊ≤°ÊúâÁºñËØëÔºåÊâÄ‰ª•Ë¶ÅÂú®Ëé∑Âèñ‰∏ÄÊ¨°\n    mod = await moduleGraph.ensureEntryFromUrl(url)\n    // Â¶ÇÊûúÂ∑≤ÁªèËØªÂèñ‰∫ÜÊ∫êÊñá‰ª∂‰∫Ü\n    if (code) {\n      // ÂêØÂä®ÁºñËØëÊµÅÁ®ã\n      // Â•óË∑ØËøòÊòØ‰∏ÄÊ†∑ÔºåÈÅçÂéÜÊèí‰ª∂ÁÑ∂ÂêéË∞ÉÁî®Êèí‰ª∂‰∏≠ÁöÑÊñπÊ≥ïÔºåÁºñËØëËøîÂõûÁªìÊûú\n      // resolvedResult?.id ËøôÈáåÁöÑ id ÂØπ‰∫éËÉΩÁ°ÆÂÆöÁºñËØëÁöÑÊòØÂì™ÁßçÊñá‰ª∂\n      transformResult = await pluginContainer.transform(\n        code as string,\n        resolvedResult?.id,\n      )\n    }\n  }\n  // ÁÑ∂ÂêéËÆ≤ÁªìÊûú‰øùÂ≠òÂà∞ÂΩìÂâç url ÂØπÂ∫îÁöÑÂÆû‰æã‰∏≠ÔºåÊñπ‰æøÂêéÁª≠Ë∞ÉÁî®\n  if (mod) {\n    mod.transformResult = transformResult\n  }\n  // ËøîÂõûÁºñËØëÁªìÊûú\n  return transformResult\n}\n\nexport function transformMiddleware(\n  serverContext: ServerContext,\n): NextHandleFunction {\n  return async (req, res, next) => {\n    // Â¶ÇÊûúËØ∑Ê±ÇÊñπÊ≥ï‰∏çÊòØ GET ÊàñËÄÖËØ∑Ê±Ç URL ‰∏∫Á©∫ÔºåÂàôË∑≥ËøáÂΩìÂâç‰∏≠Èó¥‰ª∂Ôºå‰∫§Áªô‰∏ã‰∏Ä‰∏™‰∏≠Èó¥‰ª∂ÊàñËÄÖË∑ØÁî±Â§ÑÁêÜÂáΩÊï∞\n    // Áõ∏ÂΩì‰∫éÂÖúÂ∫ïÂ§ÑÁêÜ\n    if (req.method !== 'GET' || !req.url) {\n      return next()\n    }\n    const url = req.url\n    debug('transformMiddleware: %s', url)\n    // transform JS and CSS request\n    // Âà§Êñ≠ÊòØÂê¶ÊòØ js css,vue ÊàñËÄÖÈùôÊÄÅËµÑÊ∫êÁ±ªÂûã\n    if (\n      isJSRequest(url) ||\n      isVue(url) ||\n      isCSSRequest(url) ||\n      // ÈùôÊÄÅËµÑÊ∫êÁöÑ import ËØ∑Ê±ÇÔºåÂ¶Ç import logo from './logo.svg?import';\n      isImportRequest(url)\n    ) {\n      // Ê†∏ÂøÉÂ§ÑÁêÜÂáΩÊï∞ ‰º†ÂÖ• url Âíå‰∏ä‰∏ãÊñáÂØπË±°\n      let result = await transformRequest(url, serverContext)\n      if (!result) {\n        // Â¶ÇÊûúÊ≤°ÊúâÁªìÊûúÔºåÈÇ£‰πàÂ∞±‰∫§Áªô‰∏ã‰∏Ä‰∏™‰∏≠Èó¥‰ª∂Â§ÑÁêÜ\n        return next()\n      }\n      // Â¶ÇÊûúÊúâÔºåÂπ∂‰∏î‰∏çÊòØ‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåÊàë‰ª¨ÊãøÂà∞ÁºñËØëÁªìÊûúÂ∞±ÂèØ‰ª•‰∫Ü\n      // Âõ†‰∏∫ÊúâÁöÑËøîÂõûÁöÑÂèØËÉΩÊòØ‰∏Ä‰∏™ÂØπË±°\n      if (result && typeof result !== 'string') {\n        result = result.code\n      }\n      res.statusCode = 200\n      res.setHeader('Content-Type', 'application/javascript')\n      // ËøîÂõûÁªôÂÆ¢Êà∑Á´Ø,‰∏ã‰∏Ä‰∏™‰∏≠Èó¥‰ª∂Â∞±‰∏çËµ∞‰∫Ü\n      return res.end(result)\n    }\n    // Â¶ÇÊûú‰ªÄ‰πàÈÉΩ‰∏çÂëΩ‰∏≠ÔºåÁªôÂä†‰∏Ä‰∏™‰∏≠Èó¥‰ª∂Â§ÑÁêÜ\n\n    return next()\n  }\n}\n","/** @format */\n\nimport { PartialResolvedId, TransformResult } from 'rollup'\nimport { cleanUrl } from './utils'\n\nexport class ModuleNode {\n  // ËµÑÊ∫êËÆøÈóÆ url\n  url: string\n  // ËµÑÊ∫êÁªùÂØπË∑ØÂæÑ\n  id: string | null = null\n  importers = new Set<ModuleNode>()\n  importedModules = new Set<ModuleNode>()\n  transformResult: TransformResult | null = null\n  lastHMRTimestamp = 0\n  constructor(url: string) {\n    this.url = url\n  }\n}\n\nexport class ModuleGraph {\n  // ËµÑÊ∫ê url Âà∞ ModuleNode ÁöÑÊò†Â∞ÑË°®\n  urlToModuleMap = new Map<string, ModuleNode>()\n  // ËµÑÊ∫êÁªùÂØπË∑ØÂæÑÂà∞ ModuleNode ÁöÑÊò†Â∞ÑË°®\n  idToModuleMap = new Map<string, ModuleNode>()\n\n  constructor(\n    private resolveId: (url: string) => Promise<PartialResolvedId | null>,\n  ) {}\n\n  getModuleById(id: string): ModuleNode | undefined {\n    return this.idToModuleMap.get(id)\n  }\n\n  async getModuleByUrl(rawUrl: string): Promise<ModuleNode | undefined> {\n    const { url } = await this._resolve(rawUrl)\n    return this.urlToModuleMap.get(url)\n  }\n\n  async ensureEntryFromUrl(rawUrl: string): Promise<ModuleNode> {\n    const { url, resolvedId } = await this._resolve(rawUrl)\n    // È¶ñÂÖàÊ£ÄÊü•ÁºìÂ≠ò\n    if (this.urlToModuleMap.has(url)) {\n      // ÊâæÂà∞‰∫ÜÂ∞±ËøîÂõû\n      return this.urlToModuleMap.get(url) as ModuleNode\n    }\n    // Ëã•Êó†ÁºìÂ≠òÔºåÊõ¥Êñ∞ urlToModuleMap Âíå idToModuleMap\n    const mod = new ModuleNode(url)\n    mod.id = resolvedId\n    this.urlToModuleMap.set(url, mod)\n    this.idToModuleMap.set(resolvedId, mod)\n    return mod\n  }\n\n  async updateModuleInfo(\n    mod: ModuleNode,\n    importedModules: Set<string | ModuleNode>,\n  ) {\n    const prevImports = mod.importedModules\n    for (const curImports of importedModules) {\n      const dep =\n        typeof curImports === 'string'\n          ? await this.ensureEntryFromUrl(cleanUrl(curImports))\n          : curImports\n      if (dep) {\n        mod.importedModules.add(dep)\n        dep.importers.add(mod)\n      }\n    }\n    // Ê∏ÖÈô§Â∑≤Áªè‰∏çÂÜçË¢´ÂºïÁî®ÁöÑ‰æùËµñ\n    for (const prevImport of prevImports) {\n      if (!importedModules.has(prevImport.url)) {\n        prevImport.importers.delete(mod)\n      }\n    }\n  }\n\n  invalidateModule(file: string) {\n    // ÊâæÂà∞ÂÆû‰æã\n    const mod = this.idToModuleMap.get(file)\n    if (mod) {\n      mod.lastHMRTimestamp = Date.now()\n      mod.transformResult = null\n      mod.importers.forEach((importer) => {\n        this.invalidateModule(importer.id!)\n      })\n    }\n  }\n\n  private async _resolve(\n    url: string,\n  ): Promise<{ url: string; resolvedId: string }> {\n    const resolved = await this.resolveId(url)\n    const resolvedId = resolved?.id || url\n    return { url, resolvedId }\n  }\n}\n","/** @format */\n\nimport type {\n  LoadResult,\n  PartialResolvedId,\n  SourceDescription,\n  PluginContext as RollupPluginContext,\n  ResolvedId,\n} from 'rollup'\nimport { Plugin } from './plugin'\n\nexport interface PluginContainer {\n  resolveId(id: string, importer?: string): Promise<PartialResolvedId | null>\n  load(id: string): Promise<LoadResult | null>\n  transform(code: string, id: string): Promise<SourceDescription | null>\n}\n\n// Ê®°Êãü Rollup ÁöÑÊèí‰ª∂Êú∫Âà∂\nexport const createPluginContainer = (plugins: Plugin[]): PluginContainer => {\n  // Êèí‰ª∂‰∏ä‰∏ãÊñáÂØπË±°\n  // @ts-ignore ËøôÈáå‰ªÖÂÆûÁé∞‰∏ä‰∏ãÊñáÂØπË±°ÁöÑ resolve ÊñπÊ≥ï\n  class Context implements RollupPluginContext {\n    async resolve(id: string, importer?: string) {\n      let out = await pluginContainer.resolveId(id, importer)\n      if (typeof out === 'string') out = { id: out }\n      return out as ResolvedId | null\n    }\n  }\n  // Êèí‰ª∂ÂÆπÂô®‰∏ªË¶ÅÂ∞±ÊòØ‰∏∫‰∫ÜÂØπ‰∫éÊèí‰ª∂ÂÅöËß£Êûê\n  const pluginContainer: PluginContainer = {\n    /**\n     * Â∞ùËØïËß£ÊûêÁªôÂÆöÁöÑÊ®°Âùó IDÔºåÂπ∂Âú®Ëß£ÊûêÊàêÂäüÊó∂ËøîÂõûËß£ÊûêÂêéÁöÑ ID\n     *\n     * Ëøô‰∏™ÂáΩÊï∞Êé•Âèó‰∏§‰∏™ÂèÇÊï∞ÔºöID ÂíåÂèØÈÄâÁöÑÂØºÂÖ•Âô®Â≠óÁ¨¶‰∏≤„ÄÇÂÆÉÈÅçÂéÜ‰∏Ä‰∏™Êèí‰ª∂Êï∞ÁªÑÔºåÂØªÊâæÂÖ∑Êúâ resolveId ÊñπÊ≥ïÁöÑÊèí‰ª∂„ÄÇ\n     * Â¶ÇÊûúÊâæÂà∞ËøôÊ†∑ÁöÑÊèí‰ª∂ÔºåÂÆÉÂ∞ÜË∞ÉÁî®ËØ•Êèí‰ª∂ÁöÑ resolveId ÊñπÊ≥ïÔºåÂπ∂‰º†ÂÖ• ID ÂíåÂØºÂÖ•Âô®‰Ωú‰∏∫ÂèÇÊï∞„ÄÇËøô‰∏™ÊñπÊ≥ïÂèØ‰ª•ÂêåÊ≠•ÊàñÂºÇÊ≠•Âú∞ËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑ IDÔºåËøô‰∏™ ID ÂèØ‰ª•ÊòØÂ≠óÁ¨¶‰∏≤ÊàñËÄÖÂÖ∑Êúâ id Â±ûÊÄßÁöÑÂØπË±°„ÄÇ\n     * Â¶ÇÊûúËøîÂõû‰∫ÜÊñ∞ÁöÑ IDÔºåÂÆÉÂ∞ÜË¢´ËµãÂÄºÁªôÂáΩÊï∞ÁöÑÂ±ÄÈÉ®ÂèòÈáè idÔºåÂπ∂‰ΩøÁî®Ëøô‰∏™Êñ∞ ID ËøîÂõû‰∏Ä‰∏™ÂåÖÂê´ id ÁöÑÂØπË±°„ÄÇÂ¶ÇÊûúÊ≤°ÊúâÊèí‰ª∂ËÉΩÂ§üËß£Êûê IDÔºåÂáΩÊï∞Â∞ÜËøîÂõû null„ÄÇ\n     *\n     * @param {string} id - Ë¶ÅËß£ÊûêÁöÑÊ®°Âùó ID\n     * @param {string=} importer - ÂèØÈÄâÁöÑÂØºÂÖ•Âô®Â≠óÁ¨¶‰∏≤ÔºåÁî®‰∫é‰º†ÈÄíÁªôÊèí‰ª∂\n     * @returns {Promise<{ id: string } | null>} - ‰∏Ä‰∏™ PromiseÔºåËß£ÊûêÊàêÂäüÊó∂ËøîÂõû‰∏Ä‰∏™ÂåÖÂê´Ëß£ÊûêÂêé ID ÁöÑÂØπË±°ÔºåÂê¶ÂàôËøîÂõû null\n     */\n    async resolveId(id: string, importer?: string) {\n      const ctx = new Context() as any\n      // ÈÅçÂéÜÊâÄÊúâÁöÑÊèí‰ª∂ÔºåÁü•ÈÅìÊâæÂà∞‰∏Ä‰∏™ÂåπÈÖçÁöÑÊèí‰ª∂ÔºåÊãøÂà∞ÊãºÊé•ÂêéÁöÑ id ÁªìÊûú‰∏∫Ê≠¢ËøîÂõû\n      // ÂÖ∂ÂÆûË∞ÉÁî®ÁöÑÈÉΩÊòØÊèí‰ª∂‰∏≠ÁöÑresolveId ÊñπÊ≥ï\n      for (const plugin of plugins) {\n        if (plugin.resolveId) {\n          const newId = await plugin.resolveId.call(ctx as any, id, importer)\n          if (newId) {\n            id = typeof newId === 'string' ? newId : newId.id\n            return { id }\n          }\n        }\n      }\n      return null\n    },\n    async load(id) {\n      const ctx = new Context() as any\n      for (const plugin of plugins) {\n        // ÂÖ∂ÂÆûÁºñËØë‰πüÊòØÊãøÂà∞Êèí‰ª∂‰∏≠ÂØπÈ•ÆÁöÑÊñπÊ≥ïÂéªÁºñËØë\n        // ËøôÈáåÂ∞±Â∞Ü‰∏ª‰ΩìÊµÅÁ®ãÂíåÊèí‰ª∂ÁöÑËÉΩÂäõÂÅöÂà∞‰∫ÜÈ´òÂ∫¶Ëß£ËÄ¶\n        if (plugin.load) {\n          const result = await plugin.load.call(ctx, id)\n          if (result) {\n            return result\n          }\n        }\n      }\n      return null\n    },\n    async transform(code, id) {\n      const ctx = new Context() as any\n      for (const plugin of plugins) {\n        if (plugin.transform) {\n          const result = await plugin.transform.call(ctx, code, id)\n          if (!result) continue\n          if (typeof result === 'string') {\n            code = result\n          } else if (result.code) {\n            code = result.code\n          }\n        }\n      }\n      return { code }\n    },\n  }\n\n  return pluginContainer\n}\n","import { readFile } from \"fs-extra\";\nimport { Plugin } from \"../plugin\";\nimport { isJSRequest } from \"../utils\";\nimport esbuild from \"esbuild\";\nimport path from \"path\";\n\nexport function esbuildTransformPlugin(): Plugin {\n  return {\n    name: \"m-vite:esbuild-transform\",\n    async load(id) {\n      if (isJSRequest(id)) {\n        try {\n          const code = await readFile(id, \"utf-8\");\n          return code;\n        } catch (e) {\n          return null;\n        }\n      }\n    },\n    async transform(code, id) {\n      if (isJSRequest(id)) {\n        const extname = path.extname(id).slice(1);\n        // esbuild ËΩ¨Êç¢ js\n        const { code: transformedCode, map } = await esbuild.transform(code, {\n          target: \"esnext\",\n          format: \"esm\",\n          sourcemap: true,\n          loader: extname as \"js\" | \"ts\" | \"jsx\" | \"tsx\",\n        });\n        return {\n          code: transformedCode,\n          map,\n        };\n      }\n      return null;\n    },\n  };\n}\n","import resolve from \"resolve\";\nimport { Plugin } from \"../plugin\";\nimport { ServerContext } from \"../server/index\";\nimport path from \"path\";\nimport { pathExists } from \"fs-extra\";\nimport { DEFAULT_EXTERSIONS } from \"../constants\";\nimport { removeImportQuery, cleanUrl, isInternalRequest, normalizePath, isWindows } from \"../utils\";\n\nexport function resolvePlugin(): Plugin {\n  let serverContext: ServerContext;\n  return {\n    name: \"m-vite:resolve\",\n    configureServer(s) {\n      serverContext = s;\n    },\n    async resolveId(id: string, importer?: string) {\n      // console.log(id,'resolveId')\n      id = removeImportQuery(cleanUrl(id));\n      if (isInternalRequest(id)) {\n        return null;\n      }\n      if (path.isAbsolute(id)) {\n        if (await pathExists(id)) {\n          return { id };\n        }\n        // Âä†‰∏ä root Ë∑ØÂæÑÂâçÁºÄÔºåÂ§ÑÁêÜ /src/main.tsx ÁöÑÊÉÖÂÜµ\n        id = path.join(serverContext.root, id);\n        if (await pathExists(id)) {\n          return { id };\n        }\n      } else if (id.startsWith(\".\")) {\n        if (!importer) {\n          throw new Error(\"`importer` should not be undefined\");\n        }\n        const hasExtension = path.extname(id).length > 1;\n        let resolvedId: string;\n        // ./App.tsx\n        if (hasExtension) {\n          resolvedId = normalizePath(resolve.sync(id, { basedir: path.dirname(importer) }));\n          if (await pathExists(resolvedId)) {\n            return { id: resolvedId };\n          }\n        } else {\n          // ./App -> ./App.tsx\n          for (const extname of DEFAULT_EXTERSIONS) {\n            try {\n              const withExtension = `${id}${extname}`;\n              resolvedId = normalizePath(resolve.sync(withExtension, {\n                basedir: path.dirname(importer),\n              }));\n              if (await pathExists(resolvedId)) {\n                return { id: resolvedId };\n              }\n            } catch (e) {\n              continue;\n            }\n          }\n        }\n      }\n      return null;\n    },\n  };\n}\n","/** @format */\n\nimport { init, parse } from 'es-module-lexer'\nimport {\n  BARE_IMPORT_RE,\n  CLIENT_PUBLIC_PATH,\n  PRE_BUNDLE_DIR,\n} from '../constants'\nimport {\n  cleanUrl,\n  getShortName,\n  isInternalRequest,\n  isJSRequest,\n  isVue,\n  isWindows,\n  normalizePath,\n} from '../utils'\nimport MagicString from 'magic-string'\nimport path from 'path'\nimport { Plugin } from '../plugin'\nimport { ServerContext } from '../server/index'\n\nexport function importAnalysisPlugin(): Plugin {\n  let serverContext: ServerContext\n  return {\n    name: 'm-vite:import-analysis',\n    configureServer(s) {\n      serverContext = s\n    },\n    async transform(code: string, id: string) {\n      \n      if ((!isJSRequest(id) || isInternalRequest(id)) && !isVue(id)) {\n        return null;\n      }\n      await init\n      const importedModules = new Set<string>()\n      const [imports] = parse(code)\n      const ms = new MagicString(code)\n      const resolve = async (id: string, importer?: string) => {\n        const resolved = await serverContext.pluginContainer.resolveId(\n          id,\n          normalizePath(importer),\n        )\n        if (!resolved) {\n          return\n        }\n        const cleanedId = cleanUrl(resolved.id)\n        const mod = moduleGraph.getModuleById(cleanedId)\n        let resolvedId = `/${getShortName(resolved.id, serverContext.root)}`\n        if (mod && mod.lastHMRTimestamp > 0) {\n          // resolvedId += \"?t=\" + mod.lastHMRTimestamp;\n        }\n        return resolvedId\n      }\n      const { moduleGraph } = serverContext\n      const curMod = moduleGraph.getModuleById(id)!\n\n      for (const importInfo of imports) {\n        const { s: modStart, e: modEnd, n: modSource } = importInfo\n        if (!modSource || isInternalRequest(modSource)) continue\n        // ÈùôÊÄÅËµÑÊ∫ê\n        if (modSource.endsWith('.svg')) {\n          // Âä†‰∏ä ?import ÂêéÁºÄ\n          const resolvedUrl = await resolve(modSource, id)\n          ms.overwrite(modStart, modEnd, `${resolvedUrl}?import`)\n          continue\n        }\n        // Á¨¨‰∏âÊñπÂ∫ì: Ë∑ØÂæÑÈáçÂÜôÂà∞È¢ÑÊûÑÂª∫‰∫ßÁâ©ÁöÑË∑ØÂæÑ\n        if (BARE_IMPORT_RE.test(modSource)) {\n          const bundlePath = normalizePath(\n            path.join('/', PRE_BUNDLE_DIR, `${modSource}.js`),\n          )\n          ms.overwrite(modStart, modEnd, bundlePath)\n          importedModules.add(bundlePath)\n        } else if (modSource.startsWith('.') || modSource.startsWith('/')) {\n          const resolved = await resolve(modSource, id)\n          if (resolved) {\n            ms.overwrite(modStart, modEnd, resolved)\n            importedModules.add(resolved)\n          }\n        }\n      }\n      // Âè™ÂØπ‰∏öÂä°Ê∫êÁ†ÅÊ≥®ÂÖ•\n      if (!id.includes('node_modules')) {\n        // Ê≥®ÂÖ• HMR Áõ∏ÂÖ≥ÁöÑÂ∑•ÂÖ∑ÂáΩÊï∞\n        ms.prepend(\n          `import { createHotContext as __vite__createHotContext } from \"${CLIENT_PUBLIC_PATH}\";` +\n            `import.meta.hot = __vite__createHotContext(${JSON.stringify(\n              cleanUrl(curMod.url),\n            )});`,\n        )\n      }\n      //Ê≥®ÂÖ•ÂÖ≥ËÅîÊ®°ÂùóÔºåÂΩ¢Êàê‰æùËµñÂõæË∞±\n      moduleGraph.updateModuleInfo(curMod, importedModules)\n\n      return {\n        code: ms.toString(),\n        map: ms.generateMap(),\n      }\n    },\n  }\n}\n","/** @format */\n\n// fs-extraÊõø‰ª£ NodeÂÜÖÁΩÆ fs Ê®°Âùó\nimport { readFile } from 'fs-extra'\nimport { CLIENT_PUBLIC_PATH } from '../constants'\nimport { Plugin } from '../plugin'\nimport { ServerContext } from '../server'\nimport { getShortName } from '../utils'\n\nexport function cssPlugin(): Plugin {\n  let serverContext: ServerContext\n  return {\n    name: 'm-vite:css',\n    configureServer(s) {\n      serverContext = s\n    },\n    load(id) {\n      // Â¶ÇÊûúÂêéÁºÄÂØπÁöÑ‰∏äÔºåÁõ¥Êé•ËøîÂõû ËØªÂèñ css Êñá‰ª∂\n      if (id.endsWith('.css')) {\n        return readFile(id, 'utf-8')\n      }\n    },\n    async transform(code, id) {\n      if (id.endsWith('.css')) {\n        // ÂåÖË£ÖÊàê JS Ê®°ÂùóÂ§ÑÁêÜÊâçËÉΩÊâßË°å\n        const jsContent = `\nimport { createHotContext as __vite__createHotContext } from \"${CLIENT_PUBLIC_PATH}\";\nimport.meta.hot = __vite__createHotContext(\"/${getShortName(\n          id,\n          serverContext.root,\n        )}\");\nimport { updateStyle, removeStyle } from \"${CLIENT_PUBLIC_PATH}\"\nconst id = '${id}';\nconst css = \\`${code.replace(/\\n/g, '')}\\`;\n\nupdateStyle(id, css);\nimport.meta.hot.accept();\nexport default css;\nimport.meta.hot.prune(() => removeStyle(id));`.trim()\n        return {\n          code: jsContent,\n        }\n      }\n      return null\n    },\n  }\n}\n","import { pathExists, readFile } from \"fs-extra\";\nimport { Plugin } from \"../plugin\";\nimport { ServerContext } from \"../server\";\nimport { cleanUrl, getShortName, normalizePath, removeImportQuery } from \"../utils\";\n\nexport function assetPlugin(): Plugin {\n  let serverContext: ServerContext;\n\n  return {\n    name: \"m-vite:asset\",\n    configureServer(s) {\n      serverContext = s;\n    },\n    async load(id) {\n      const cleanedId = removeImportQuery(cleanUrl(id));\n      const resolvedId = `/${getShortName(normalizePath(id), serverContext.root)}`;\n\n      // ËøôÈáå‰ªÖÂ§ÑÁêÜ svg\n      if (cleanedId.endsWith(\".svg\")) {\n        return {\n          code: `export default \"${resolvedId}\"`,\n        };\n      }\n    },\n  };\n}\n","/** @format */\n\nimport { CLIENT_PUBLIC_PATH, HMR_PORT } from '../constants'\nimport { Plugin } from '../plugin'\nimport fs from 'fs-extra'\nimport path from 'path'\nimport { ServerContext } from '../server/index'\n// Ê®°ÊùøÂ§ÑÁêÜÊèí‰ª∂\nexport function clientInjectPlugin(): Plugin {\n  let serverContext: ServerContext\n  return {\n    name: 'm-vite:client-inject',\n    configureServer(s) {\n      serverContext = s\n    },\n    resolveId(id) {\n      if (id === CLIENT_PUBLIC_PATH) {\n        return { id }\n      }\n      return null\n    },\n    async load(id) {\n      if (id === CLIENT_PUBLIC_PATH) {\n        const realPath = path.join(\n          serverContext.root,\n          'node_modules',\n          'mini-vite',\n          'dist',\n          'client.mjs',\n        )\n        const code = await fs.readFile(realPath, 'utf-8')\n        return {\n          code: code.replace('__HMR_PORT__', JSON.stringify(HMR_PORT)),\n        }\n      }\n    },\n    transformIndexHtml(raw) {\n      return raw.replace(\n        /(<head[^>]*>)/i,\n        `$1<script type=\"module\" src=\"${CLIENT_PUBLIC_PATH}\"></script>`,\n      )\n    },\n  }\n}\n","/** @format */\n\nimport { Plugin } from '../plugin'\nimport fs from 'fs'\nimport path from 'path'\nimport { isJSRequest } from '../utils'\nimport { transformAsync } from '@babel/core'\nimport { ServerContext } from '../server'\nfunction loadPlugin(path: string): Promise<any> {\n  return import(path).then((module) => module.default || module)\n}\n\nconst RUNTIME_PUBLIC_PATH = '/@react-refresh'\n\nconst runtimeFilePath = path.resolve(\n  __dirname,\n  '..',\n  'node_modules',\n  'react-refresh/cjs/react-refresh-runtime.development.js',\n)\n\n// react refresh ÁöÑÂÖ∑‰ΩìÂÜÖÂÆπ\nexport const runtimeCode = `\nconst exports = {}\n${fs.readFileSync(runtimeFilePath, 'utf-8')}\nfunction debounce(fn, delay) {\n  let handle\n  return () => {\n    clearTimeout(handle)\n    handle = setTimeout(fn, delay)\n  }\n}\nexports.performReactRefresh = debounce(exports.performReactRefresh, 16)\nexport default exports\n`\n\n// ÈúÄË¶ÅÊ≥®ÂÖ•ÁöÑÂÖ®Â±Ä‰ª£Á†Å\nexport const preambleCode = `\nimport RefreshRuntime from \"${RUNTIME_PUBLIC_PATH}\"\nRefreshRuntime.injectIntoGlobalHook(window)\nwindow.$RefreshReg$ = () => {}\nwindow.$RefreshSig$ = () => (type) => type\nwindow.__vite_plugin_react_preamble_installed__ = true\n`\n\nconst header = `\nimport RefreshRuntime from \"${RUNTIME_PUBLIC_PATH}\";\n\nlet prevRefreshReg;\nlet prevRefreshSig;\n\nif (import.meta.hot) {\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    RefreshRuntime.register(type, __SOURCE__ + \" \" + id)\n  };\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}`.replace(/[\\n]+/gm, '')\n\nconst footer = `\nif (import.meta.hot) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n  import.meta.hot.accept();\n  if (!window.__vite_plugin_react_timeout) {\n    window.__vite_plugin_react_timeout = setTimeout(() => {\n      window.__vite_plugin_react_timeout = 0;\n      RefreshRuntime.performReactRefresh();\n    }, 30);\n  }\n}`\n\nexport function reactHMRPlugin(): Plugin {\n  let serverContext: ServerContext\n  return {\n    name: 'm-vite:react-refresh',\n    configureServer(s) {\n      serverContext = s\n    },\n    resolveId(id) {\n      if (id === RUNTIME_PUBLIC_PATH) {\n        return { id }\n      }\n      return null\n    },\n    async load(id) {\n      if (id === RUNTIME_PUBLIC_PATH) {\n        return runtimeCode.replace(\n          'process.env.NODE_ENV',\n          JSON.stringify('development'),\n        )\n      }\n    },\n    async transform(code, id) {\n      if (isJSRequest(id) && !id.includes('node_modules')) {\n        // Ê∫ê‰ª£Á†Å‰∏≠‰ΩøÁî®ÊãìÂ±ïÊèí‰ª∂ÁöÑÂΩ¢ÂºèÂÆûÁé∞,ËøôÈáåÊàë‰ª¨‰∏∫‰∫ÜÂÖºÂÆπvue Â∞±ÁÆÄÂçïÁöÑÂà§Êñ≠‰∏Ä‰∏ã\n        if (serverContext.type == 'react') {\n          const reactRefreshPlugin = await loadPlugin('react-refresh/babel')\n          const transformedCode = await transformAsync(code, {\n            plugins: [reactRefreshPlugin],\n          })\n          return {\n            code:\n              header.replace('__SOURCE__', JSON.stringify(id)) +\n              transformedCode!.code +\n              footer,\n          }\n        }\n      }\n      return null\n    },\n    transformIndexHtml(raw) {\n      // Ê∫ê‰ª£Á†Å‰∏≠‰ΩøÁî®ÊãìÂ±ïÊèí‰ª∂ÁöÑÂΩ¢ÂºèÂÆûÁé∞,ËøôÈáåÊàë‰ª¨‰∏∫‰∫ÜÂÖºÂÆπvue Â∞±ÁÆÄÂçïÁöÑÂà§Êñ≠‰∏Ä‰∏ã\n      if (serverContext.type == 'react') {\n        return raw.replace(\n          /(<head[^>]*>)/i,\n          `$1<script type=\"module\">${preambleCode}</script>`,\n        )\n      }\n      return raw\n    },\n  }\n}\n","/** @format */\n\nimport { Plugin } from '../plugin'\nimport path from 'node:path'\n// fs-extraÊõø‰ª£ NodeÂÜÖÁΩÆ fs Ê®°Âùó\nimport { readFile, writeFile } from 'fs-extra'\nimport { ServerContext } from '../server/index'\nimport { isVue, getHash, parseVueRequest } from '../utils'\nimport createDebug from 'debug'\nimport { transformWithEsbuild } from 'vite'\nimport {\n  parse,\n  compileTemplate,\n  compileScript,\n  rewriteDefault,\n  SFCBlock,\n  SFCDescriptor,\n  SFCScriptBlock,\n} from '@vue/compiler-sfc'\ndeclare module '@vue/compiler-sfc' {\n  interface SFCDescriptor {\n    id: string\n  }\n}\nconst ignoreList = [\n  'id',\n  'index',\n  'src',\n  'type',\n  'lang',\n  'module',\n  'scoped',\n  'generic',\n]\n\nlet clientCache = new WeakMap<SFCDescriptor, SFCScriptBlock | null>()\n\nexport function getResolvedScript(\n  descriptor: SFCDescriptor,\n): SFCScriptBlock | null | undefined {\n  return (clientCache).get(descriptor)\n}\n\nexport function setResolvedScript(\n  descriptor: SFCDescriptor,\n  script: SFCScriptBlock,\n): void {\n  clientCache.set(descriptor, script)\n}\n\nexport function resolveTemplateCompilerOptions(\n  descriptor: SFCDescriptor,\n) {\n  const resolvedScript = getResolvedScript(descriptor)\n  const hasScoped = descriptor.styles.some((style) => style.scoped)\n\n  return {\n    scoped: hasScoped,\n    compilerOptions: {\n      sourceMap: true,\n      scopeId: hasScoped ? `data-v-${descriptor.id}` : undefined,\n      bindingMetadata: resolvedScript ? resolvedScript.bindings : undefined,\n    },\n  }\n}\n\nconst debug = createDebug('dev')\nconst createDescriptor = (code, id) => {\n  const { descriptor, errors } = parse(code, {\n    filename: id,\n    sourceMap: true,\n  })\n  descriptor.id = getHash(id)\n  return { descriptor, errors }\n}\nfunction attrsToQuery(\n  attrs: SFCBlock['attrs'],\n  langFallback?: string,\n  forceLangFallback = false,\n): string {\n  let query = ``\n  for (const name in attrs) {\n    const value = attrs[name]\n    if (!ignoreList.includes(name)) {\n      query += `&${encodeURIComponent(name)}${\n        value ? `=${encodeURIComponent(value)}` : ``\n      }`\n    }\n  }\n  if (langFallback || attrs.lang) {\n    query +=\n      `lang` in attrs\n        ? forceLangFallback\n          ? `&lang.${langFallback}`\n          : `&lang.${attrs.lang}`\n        : `&lang.${langFallback}`\n  }\n  return query\n}\n\nconst genScriptCode = (descriptor, id) => {\n  const hasScoped = descriptor.styles.some((style) => style.scoped)\n  let scriptCode = `const _sfc_main = {}`\n  let map: any\n  // console.log(descriptor,'descriptor')\n  const script = compileScript(descriptor, {\n    id: descriptor.id,\n    isProd: false,\n    sourceMap: true,\n    templateOptions: {\n      filename: id,\n      isProd: false,\n      scoped: hasScoped,\n      id: descriptor.id,\n      compilerOptions: {\n        sourceMap: true,\n      },\n    },\n  })\n  scriptCode = script.content\n  map = script.map\n  setResolvedScript(descriptor,script)\n  return {\n    code: scriptCode,\n    map: map as any,\n  }\n}\nconst genTemplateCode = (descriptor, id) => {\n  const template = descriptor.template!\n\n  const result = compileTemplate({\n    source: template.content,\n    filename: descriptor.filename,\n    id: descriptor.id,\n    ...resolveTemplateCompilerOptions(descriptor),\n  })\n  return {\n    ...result,\n    code: result.code.replace(\n      /\\nexport (function|const) (render|ssrRender)/,\n      '\\n$1 _sfc_$2',\n    ),\n  }\n}\nconst genStyleCode = (descriptor, id) => {\n  let stylesCode = ``\n  if (descriptor.styles.length) {\n    for (let i = 0; i < descriptor.styles.length; i++) {\n      const style = descriptor.styles[i]\n      const src = style.src || descriptor.filename\n      const attrsQuery = attrsToQuery(style.attrs, 'css')\n      const srcQuery = style.src\n        ? style.scoped\n          ? `&src=${descriptor.id}`\n          : '&src=true'\n        : ''\n      const scopedQuery = style.scoped ? `&scoped=${descriptor.id}` : ``\n      const query = `?vue&type=style&index=${i}${srcQuery}${scopedQuery}`\n      const styleRequest = src + query + attrsQuery\n      if (style.module) {\n      } else {\n        stylesCode += `\\nimport ${JSON.stringify(styleRequest)}`\n      }\n    }\n  }\n  return stylesCode\n}\nexport function vueHMRPlugin(): Plugin {\n  let serverContext: ServerContext\n  return {\n    name: 'm-vite:vue-hot',\n    configureServer(s) {\n      serverContext = s\n    },\n    resolveId() {\n      return null\n    },\n    async load(id) {\n      if (isVue(id)) {\n        // ËØªÂèñ vue Êñá‰ª∂\n        return readFile(id, 'utf-8')\n      }\n    },\n    async transform(code, id) {\n      const { filename, query } = parseVueRequest(id)\n      if (isVue(id) && !id.includes('node_modules')) {\n        // Ëß£Êûê vue Êñá‰ª∂\n        const { descriptor, errors } = createDescriptor(code, id)\n\n        // ÈîôËØØÂ§ÑÁêÜ\n        if (errors.length) {\n          errors.forEach((error) => debug(error))\n          return null\n        }\n        // Â§ÑÁêÜ js\n        let { code: scriptCode, map } = genScriptCode(descriptor, id)\n        // const outFileName = id;\n        // const dir = path.dirname(id);\n        // const ext = path.extname(id);\n        // const baseName = path.basename(id, ext);\n        // const newFileName = `${baseName}.debug.js`;\n        // const newPath = path.join(dir, newFileName);\n        // await writeFile(newPath, scriptCode);\n        scriptCode = scriptCode.replace(\"export default\", \"const _sfc_main =\");\n        // Â§ÑÁêÜ template\n        let { code: templateCode, map: templateMap } = genTemplateCode(\n          descriptor,\n          id,\n        )\n        // Â§ÑÁêÜ styles\n        const stylesCode = genStyleCode(descriptor, id)\n        const output: string[] = [scriptCode, templateCode, stylesCode]\n        output.push(`_sfc_main.__hmrId = ${JSON.stringify(descriptor.id)}`)\n        output.push(\n          `typeof __VUE_HMR_RUNTIME__ !== 'undefined' && ` +\n            `__VUE_HMR_RUNTIME__.createRecord(_sfc_main.__hmrId, _sfc_main)`,\n        )\n        output.push(\n          `import.meta.hot.accept(mod => {`,\n          `  if (!mod) return`,\n          `  const { default: updated, _rerender_only } = mod`,\n          `  if (_rerender_only) {`,\n          `    __VUE_HMR_RUNTIME__.rerender(updated.__hmrId, updated.render)`,\n          `  } else {`,\n          `    __VUE_HMR_RUNTIME__.reload(updated.__hmrId, updated)`,\n          `  }`,\n          `})`,\n        )\n\n        output.push(`_sfc_main.render = _sfc_render`);\n        output.push(`export default _sfc_main`)\n\n        let resolvedCode = output.join('\\n')\n        let resolvedMap\n        const lang = descriptor.scriptSetup?.lang || descriptor.script?.lang\n\n        // if (\n        //   lang &&\n        //   /tsx?$/.test(lang) &&\n        //   !descriptor.script?.src // only normal script can have src\n        // ) {\n        //   const { code, map } = await transformWithEsbuild(resolvedCode, id, {\n        //     loader: 'ts',\n        //     target: 'esnext',\n        //     sourcemap: true,\n        //   })\n        //   resolvedCode = code\n        //   resolvedMap = map as any\n        // }\n        return { code: resolvedCode, map: resolvedMap }\n      }\n      return null\n    },\n  }\n}\n","/** @format */\n\nimport { esbuildTransformPlugin } from './esbuild'\nimport { resolvePlugin } from './resolve'\nimport { importAnalysisPlugin } from './importAnalysis'\nimport { Plugin } from '../plugin'\nimport { cssPlugin } from './css'\nimport { assetPlugin } from './assets'\nimport { clientInjectPlugin } from './clientInject'\nimport { reactHMRPlugin } from './react-hmr'\nimport { vueHMRPlugin } from './vue-hmr'\nexport function resolvePlugins(): Plugin[] {\n  return [\n    clientInjectPlugin(),\n    resolvePlugin(),\n    esbuildTransformPlugin(),\n    reactHMRPlugin(),\n    vueHMRPlugin(),\n    importAnalysisPlugin(),\n    cssPlugin(),\n    assetPlugin(),\n  ]\n}\n","/** @format */\n\nimport { NextHandleFunction } from 'connect'\nimport { ServerContext } from '../index'\nimport path from 'path'\nimport { pathExists, readFile } from 'fs-extra'\n\nexport function indexHtmlMiddware(\n  serverContext: ServerContext,\n): NextHandleFunction {\n  return async (req, res, next) => {\n    // ËøôÈáåÂ∞±ÁÆÄÂçïÊù•ÁúãÔºåÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨ÂçïÊñúÊù†Â∞±Ë°®Á§∫\n    // Ë¶ÅËΩΩÂÖ• html ‰∫Ü\n    if (req.url === '/') {\n      // ‰ªé‰∏ä‰∏ãÊñá‰∏≠ÊãøÂà∞ÁõÆÂΩï\n      const { root } = serverContext\n      // ÊâæÂà∞ html Êñá‰ª∂ÔºåËøôÈáåÊàë‰ª¨‰πü‰∏çËÄÉËôëÂà´ÁöÑÊñá‰ª∂ÂêçÁöÑÊÉÖÂÜµ\n      const indexHtmlPath = path.join(root, 'index.html')\n      //Ê£ÄÊü•Êñá‰ª∂Ë∑ØÂæÑÊòØÂê¶Â≠òÂú®\n      if (await pathExists(indexHtmlPath)) {\n        // ËØªÂèñ\n        const rawHtml = await readFile(indexHtmlPath, 'utf8')\n        let html = rawHtml\n        for (const plugin of serverContext.plugins) {\n          if (plugin.transformIndexHtml) {\n            html = await plugin.transformIndexHtml(html)\n          }\n        }\n\n        res.statusCode = 200\n        res.setHeader('Content-Type', 'text/html')\n        // Áõ¥Êé•ËøîÂõû\n        return res.end(html)\n      }\n    }\n    //Â¶ÇÊûúÊ≤°ÂëΩ‰∏≠ÔºåÈÇ£Â∞±Ëµ∞‰∏ã‰∏Ä‰∏™‰∏≠Èó¥‰ª∂\n    return next()\n  }\n}\n","/** @format */\n\nimport { NextHandleFunction } from 'connect'\nimport { CLIENT_PUBLIC_PATH } from '../../constants'\nimport { isImportRequest } from '../../utils'\n//Áî®‰∫éÂ§ÑÁêÜÈùôÊÄÅËµÑ‰∫ßËØ∑Ê±ÇÁöÑ‰ºòÂåñËΩªÈáèÁ∫ß‰∏≠Èó¥‰ª∂\nimport sirv from 'sirv'\n\nexport function staticMiddleware(root: string): NextHandleFunction {\n  // Ëé∑ÂèñÈùôÊÄÅËµÑÊ∫ê\n  const root2 = root+'/public'\n  const serveFromRoot = sirv(root, { dev: true })\n  const serveFromRoot2 = sirv(root2, { dev: true })\n  return async (req, res, next) => {\n    // ÊúÄÂêé‰∏Ä‰∏™‰∫ÜÔºånext Â∞±‰∏çÁî®Ë∞ÉÁî®‰∫Ü\n    // Â¶ÇÊûúÂï•‰πüÊ≤°ÊúâÔºåÈÇ£Â∞±Áõ¥Êé•ËøîÂõû\n    if (!req.url) {\n      return\n    }\n\n    // Â¶ÇÊûúÊòØ import ËµÑÊ∫êÔºåÊàñËÄÖÔºå\"/@vite/client\" ËµÑÊ∫ê ‰∏çÂ§ÑÁêÜ\n    // ‰πãÊâÄ‰ª•‰∏çÂ§ÑÁêÜ ?import ËµÑÊ∫êÔºåÊòØÁî±‰∫éÂ∏¶ import Êú¨Ë¥®‰∏äÊòØ‰∏™js Êñá‰ª∂ÔºåËÄå‰∏çÊòØ‰∏™ÈùôÊÄÅËµÑÊ∫ê\n    if (isImportRequest(req.url) || req.url === CLIENT_PUBLIC_PATH) {\n      return\n    }\n\n    // Ê≠£ÂºèÂ§ÑÁêÜÈùôÊÄÅÊñá‰ª∂\n    serveFromRoot(req, res, ()=>{\n      serveFromRoot2(req, res, next);\n    })\n  }\n}\n","/** @format */\n\nimport connect from 'connect'\nimport { red } from 'picocolors'\nimport { WebSocketServer, WebSocket } from 'ws'\nimport { HMR_PORT } from './constants'\n\nexport function createWebSocketServer(server: connect.Server): {\n  send: (msg: string) => void\n  close: () => void\n} {\n  let wss: WebSocketServer\n  // ÂêØÂä®ÊúçÂä°Á´ØÂàõÂª∫ ws\n  wss = new WebSocketServer({ port: HMR_PORT })\n  wss.on('connection', (socket) => {\n    socket.send(JSON.stringify({ type: 'connected' }))\n  })\n\n  wss.on('error', (e: Error & { code: string }) => {\n    if (e.code !== 'EADDRINUSE') {\n      console.error(red(`WebSocket server error:\\n${e.stack || e.message}`))\n    }\n  })\n\n  return {\n    send(payload: Object) {\n      const stringified = JSON.stringify(payload)\n      wss.clients.forEach((client) => {\n        if (client.readyState === WebSocket.OPEN) {\n          // ÂèëÈÄÅ ws Ê∂àÊÅØ\n          client.send(stringified)\n        }\n      })\n    },\n\n    close() {\n      wss.close()\n    },\n  }\n}\n","/** @format */\n\nimport { ServerContext } from './server/index'\nimport { blue, green } from 'picocolors'\nimport { getShortName } from './utils'\n//* 1. ÊâìÂç∞‰∏ÄÊù°Ê∂àÊÅØÂà∞ÊéßÂà∂Âè∞ÔºåÊåáÁ§∫Âì™‰∏™Êñá‰ª∂Â∑≤Êõ¥Êîπ„ÄÇ\n//* 2. ‰ΩøÊ®°ÂùóÂõæ‰∏≠ÁöÑÁâπÂÆöÊ®°ÂùóÂ§±ÊïàÔºå‰ª•‰æøÊ®°ÂùóÁöÑ‰∏ã‰∏ÄÊ¨°ËØ∑Ê±ÇËÉΩËé∑ÂèñÂà∞Êõ¥Êñ∞ÁöÑÁâàÊú¨„ÄÇ\n//* 3. ÈÄöËøá WebSocket ËøûÊé•ÔºåÂêëÂÆ¢Êà∑Á´ØÂèëÈÄÅ‰∏Ä‰∏™Êõ¥Êñ∞Ê∂àÊÅØ„ÄÇËøô‰∏™Ê∂àÊÅØÂëäËØâÂÆ¢Êà∑Á´ØÂì™‰∏™Êñá‰ª∂Â∑≤Êõ¥ÊîπÔºåÂπ∂‰∏îÊèê‰æõ‰∫Ü‰∏Ä‰∏™Ë∑ØÂæÑÔºåÂÆ¢Êà∑Á´ØÂèØ‰ª•Ê†πÊçÆËøô‰∏™Ë∑ØÂæÑËé∑ÂèñÂà∞Êõ¥Êñ∞ÂêéÁöÑÊ®°Âùó„ÄÇ\n// ‰∏ªË¶ÅÂ∞±ÊòØÁõëÂê¨Âà∞Êñá‰ª∂ÊîπÂèòÂÉèÂÆ¢Êà∑Á´ØÊèê‰æõÊúÄÊñ∞ÁöÑ‰ª£Á†Å\nexport function bindingHMREvents(serverContext: ServerContext) {\n  const { watcher, ws, root } = serverContext\n  // ÁõëÂê¨Êñá‰ª∂ÂèòÂåñ\n  watcher.on('change', async (file) => {\n    console.log(`‚ú®${blue('[hmr]')} ${green(file)} changed`)\n    const { moduleGraph } = serverContext\n    // Á°ÆÂÆöÊîπÂä®Êñá‰ª∂\n    await moduleGraph.invalidateModule(file)\n    // ÂèëÈÄÅÊõ¥Êñ∞ÂÜÖÂÆπ\n    ws.send({\n      type: 'update',\n      updates: [\n        {\n          type: 'js-update',\n          timestamp: Date.now(),\n          path: '/' + getShortName(file, root),\n          acceptedPath: '/' + getShortName(file, root),\n        },\n      ],\n    })\n  })\n}\n"],"mappings":"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","names":[]}